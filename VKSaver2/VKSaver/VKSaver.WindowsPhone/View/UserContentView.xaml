<mvvm:VisualStateAwarePage x:Class="VKSaver.Views.UserContentView"
                           xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                           xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                           xmlns:local="using:VKSaver.Views"
                           xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                           xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                           xmlns:controls="using:VKSaver.Controls"
                           xmlns:converters="using:VKSaver.Converters"
                           xmlns:i="using:Microsoft.Xaml.Interactivity"
                           xmlns:c="using:Microsoft.Xaml.Interactions.Core"
                           xmlns:b="using:VKSaver.Behaviors"
                           xmlns:common="using:VKSaver.Common"
                           xmlns:mvvm="using:Microsoft.Practices.Prism.StoreApps"
                           mvvm:ViewModelLocator.AutoWireViewModel="True"
                           mc:Ignorable="d"
                           Style="{StaticResource DefaultPageStyle}">

    <mvvm:VisualStateAwarePage.Resources>
        <converters:UserContentGroupKeyToStringConverter x:Key="GroupKeyToStringConverter" />        
        <common:DataContextProxy x:Key="DataContextProxy" />

        <DataTemplate x:Key="JumpListHeaderTemplate">
            <Border>
                <TextBlock Text="{Binding Key, Converter={StaticResource GroupKeyToStringConverter}}"
                           Foreground="{StaticResource AccentBrush}"
                           FontSize="24"
                           FontWeight="SemiLight"
                           OpticalMarginAlignment="TrimSideBearings"
                           IsTextScaleFactorEnabled="False"
                           VerticalAlignment="Bottom"
                           Margin="0,0,0,20" />
            </Border>
        </DataTemplate>

        <DataTemplate x:Key="JumpListPickerItemTemplate">
            <Border Background="{Binding Converter={StaticResource JumpListItemBackgroundConverter}}"
                    BorderBrush="{Binding Converter={StaticResource JumpListItemForegroundConverter}}"
                    BorderThickness="{StaticResource JumpListItemBorderThickness}"
                    Height="49.5"
                    Margin="0,0,0,9.5"
                    HorizontalAlignment="Stretch">
                <TextBlock Text="{Binding Group.Key, Converter={StaticResource GroupKeyToStringConverter}}"
                           Foreground="{Binding Converter={StaticResource JumpListItemForegroundConverter}}"
                           FontSize="22"
                           FontWeight="SemiBold"
                           TextLineBounds="Tight"
                           OpticalMarginAlignment="TrimSideBearings"
                           IsColorFontEnabled="False"
                           IsTextScaleFactorEnabled="False"
                           VerticalAlignment="Bottom"
                           Margin="{StaticResource JumpListItemTextMargin}" />
            </Border>
        </DataTemplate>

        <DataTemplate x:Key="DocumentTemplate">
            <Grid Width="{Binding Converter={StaticResource OneItemsListSizeConverter}, ConverterParameter='19,0'}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>

                <controls:ImagePlaceholder Text="{Binding Title}"
                                           Source="{Binding Photo100}"
                                           Height="50"
                                           Width="65"
                                           Margin="0,0,10,0"
                                           VerticalAlignment="Top" />

                <TextBlock Style="{StaticResource ListLine1TextStyle}"
                           Text="{Binding Title}"
                           TextWrapping="WrapWholeWords"
                           MaxLines="2"
                           TextTrimming="CharacterEllipsis"
                           Grid.Column="1"
                           Pivot.SlideInAnimationGroup="GroupOne"
                           LineStackingStrategy="MaxHeight" />
            </Grid>
        </DataTemplate>

        <CollectionViewSource x:Key="AudioGroupSource"
                              Source="{Binding AudioGroup}"
                              IsSourceGrouped="True"
                              d:Source="{Binding AudioGroup}" />
        <CollectionViewSource x:Key="VideoGroupSource"
                              Source="{Binding VideoGroup}"
                              IsSourceGrouped="True"
                              d:Source="{Binding VideoGroup}" />

        <common:AudioGroupTemplateSelector x:Key="AudioGroupTemplateSelector"
                                           AudioTemplate="{StaticResource WithDurationAudioTemplate}"
                                           AlbumTemplate="{StaticResource OnlyTitleListItemTemplate}" />
        <common:VideoGroupTemplateSelector x:Key="VideoGroupTemplateSelector"
                                           AlbumTemplate="{StaticResource OnlyTitleListItemTemplate}"
                                           VideoTemplate="{StaticResource VideoTemplate}" />

        <Style x:Key="AudioItemTemplate"
               TargetType="ListViewItem"
               BasedOn="{StaticResource MarginListViewItemStyle}">
            <Setter Property="FlyoutBase.AttachedFlyout">
                <Setter.Value>
                    <MenuFlyout>
                        <MenuFlyoutItem Text="загрузить"
                                        x:Uid="DownloadFlyoutItem"
                                        Command="{Binding DataSource.DownloadItemCommand, Source={StaticResource DataContextProxy}}"
                                        CommandParameter="{Binding}" />
                        <MenuFlyoutItem Text="в мои аудиозаписи"
                                        x:Uid="AddToMyAudiosFlyoutItem"
                                        Command="{Binding DataSource.AddToMyCollectionCommand, Source={StaticResource DataContextProxy}}"
                                        CommandParameter="{Binding}" />
                        <MenuFlyoutItem Text="удалить"
                                        x:Uid="DeleteFlyoutItem"
                                        Command="{Binding DataSource.DeleteCommand, Source={StaticResource DataContextProxy}}"
                                        CommandParameter="{Binding}" />
                    </MenuFlyout>
                </Setter.Value>
            </Setter>
            <Setter Property="common:ControlExtensions.ShowFlyoutOnHolding"
                    Value="True" />
        </Style>

        <Style x:Key="VideoItemTemplate"
               TargetType="ListViewItem"
               BasedOn="{StaticResource MarginListViewItemStyle}">
            <Setter Property="FlyoutBase.AttachedFlyout">
                <Setter.Value>
                    <MenuFlyout>
                        <MenuFlyoutItem Text="в мои видеозаписи"
                                        x:Uid="AddToMyVideosFlyoutItem"
                                        Command="{Binding DataSource.AddToMyCollectionCommand, Source={StaticResource DataContextProxy}}"
                                        CommandParameter="{Binding}" />
                        <MenuFlyoutItem Text="удалить"
                                        x:Uid="DeleteFlyoutItem"
                                        Command="{Binding DataSource.DeleteCommand, Source={StaticResource DataContextProxy}}"
                                        CommandParameter="{Binding}" />
                    </MenuFlyout>
                </Setter.Value>
            </Setter>
            <Setter Property="common:ControlExtensions.ShowFlyoutOnHolding"
                    Value="True" />
        </Style>

        <Style x:Key="DocumentItemStyle"
               TargetType="ListViewItem"
               BasedOn="{StaticResource MarginListViewItemStyle}">
            <Setter Property="FlyoutBase.AttachedFlyout">
                <Setter.Value>
                    <MenuFlyout>
                        <MenuFlyoutItem Text="загрузить"
                                        x:Uid="DownloadFlyoutItem"
                                        Command="{Binding DataSource.DownloadItemCommand, Source={StaticResource DataContextProxy}}"
                                        CommandParameter="{Binding}" />
                        <MenuFlyoutItem Text="в мои документы"
                                        x:Uid="AddToMyDocsFlyoutItem"
                                        Command="{Binding DataSource.AddToMyCollectionCommand, Source={StaticResource DataContextProxy}}"
                                        CommandParameter="{Binding}" />
                        <MenuFlyoutItem Text="удалить"
                                        x:Uid="DeleteFlyoutItem"
                                        Command="{Binding DataSource.DeleteCommand, Source={StaticResource DataContextProxy}}"
                                        CommandParameter="{Binding}" />
                    </MenuFlyout>
                </Setter.Value>
            </Setter>
            <Setter Property="common:ControlExtensions.ShowFlyoutOnHolding"
                    Value="True" />
        </Style>

        <Style x:Key="AlbumItemStyle"
               TargetType="ListViewItem">
            <Setter Property="Margin"
                    Value="0,0,0,5" />
            <Setter Property="Template"
                    Value="{StaticResource NoSelectionListViewItem}" />
            <Setter Property="FlyoutBase.AttachedFlyout">
                <Setter.Value>
                    <MenuFlyout>
                        <MenuFlyoutItem Text="удалить"
                                        x:Uid="DeleteFlyoutItem"
                                        Command="{Binding DataSource.DeleteCommand, Source={StaticResource DataContextProxy}}"
                                        CommandParameter="{Binding}" />
                    </MenuFlyout>
                </Setter.Value>
            </Setter>
            <Setter Property="common:ControlExtensions.ShowFlyoutOnHolding"
                    Value="True" />
        </Style>

        <common:ContentViewItemContainerStyleSelector x:Key="AudioItemContainerSelector"
                                                      DefaultStyle="{StaticResource AudioItemTemplate}"
                                                      AlbumStyle="{StaticResource AlbumItemStyle}" />
        <common:ContentViewItemContainerStyleSelector x:Key="VideoItemContainerSelector"
                                                      DefaultStyle="{StaticResource VideoItemTemplate}"
                                                      AlbumStyle="{StaticResource AlbumItemStyle}" />
    </mvvm:VisualStateAwarePage.Resources>

    <mvvm:VisualStateAwarePage.BottomAppBar>
        <CommandBar>
            <i:Interaction.Behaviors>
                <b:CommandBarButtonsBindingBehavior PrimaryCommands="{Binding PrimaryItems}"
                                                    SecondaryCommands="{Binding SecondaryItems}"/>
            </i:Interaction.Behaviors>
        </CommandBar>
    </mvvm:VisualStateAwarePage.BottomAppBar>

    <Pivot Title="{Binding PageTitle, Converter={StaticResource ToUpperConverter}}"
           SelectedIndex="{Binding LastPivotIndex, Mode=TwoWay}"
           IsLocked="{Binding IsLockedPivot}">
        <PivotItem Header="музыка"
                   x:Uid="UserContentView_PivotSection_Music">
            <SemanticZoom Style="{StaticResource GenericJumpListStyle}">
                <SemanticZoom.ZoomedInView>
                    <controls:FixedListView Style="{StaticResource NoSelectionListViewStyle}"
                                            ItemsSource="{Binding Source={StaticResource AudioGroupSource}}"
                                            ItemTemplateSelector="{StaticResource AudioGroupTemplateSelector}"
                                            ItemContainerStyleSelector="{StaticResource AudioItemContainerSelector}"
                                            IsItemClickEnabled="{Binding IsItemClickEnabled}"
                                            SelectionMode="{Binding IsSelectionMode, Converter={StaticResource BoolToSelectionModeConverter}}">
                        <ListView.GroupStyle>
                            <GroupStyle HeaderTemplate="{StaticResource JumpListHeaderTemplate}"
                                        HeaderContainerStyle="{StaticResource JumpListListHeaderContainerStyle}"/>
                        </ListView.GroupStyle>
                        <ListView.FooterTemplate>
                            <DataTemplate>
                                <controls:StateBlock State="{Binding AudioGroup.ContentState}"
                                                     ReloadCommand="{Binding AudioGroup.LoadCommand}"
                                                     x:Uid="UserContentView_AudiosLoader"
                                                     Margin="0,0,0,60" 
                                                     LoadingText="Загружаем список аудиозаписей..."
                                                     ErrorText="Не удалось загрузить список аудиозаписей"
                                                     NoDataText="Аудиозаписи отсутствуют либо доступ к ним закрыт"/>
                            </DataTemplate>
                        </ListView.FooterTemplate>
                        <i:Interaction.Behaviors>
                            <c:EventTriggerBehavior EventName="ItemClick">
                                <c:InvokeCommandAction Command="{Binding ExecuteTracksListItemCommand}"
                                                       InputConverter="{StaticResource ItemClickEventArgsConverter}" />
                            </c:EventTriggerBehavior>
                            <b:IncrementalUpDownLoadingBehavior ScrollHeightTriggerOffset="1400"
                                                                ItemsSource="{Binding AudioGroup}" />
                            <b:SelectedItemsBindingBehavior SelectedItems="{Binding SelectedItems}"
                                                            SelectAll="{Binding SelectAllAudios}"
                                                            Command="{Binding SelectionChangedCommand}"/>
                        </i:Interaction.Behaviors>
                    </controls:FixedListView>
                </SemanticZoom.ZoomedInView>
                <SemanticZoom.ZoomedOutView>
                    <ListView ItemsSource="{Binding CollectionGroups, Source={StaticResource AudioGroupSource}}"
                              Style="{StaticResource GenericJumpListPickerStyle}"
                              ItemTemplate="{StaticResource JumpListPickerItemTemplate}" />
                </SemanticZoom.ZoomedOutView>
            </SemanticZoom>
        </PivotItem>
        <PivotItem Header="видео"
                   x:Uid="UserContentView_PivotSection_Videos">
            <SemanticZoom Style="{StaticResource GenericJumpListStyle}">
                <SemanticZoom.ZoomedInView>
                    <controls:FixedListView Style="{StaticResource NoSelectionListViewStyle}"
                                            ItemsSource="{Binding Source={StaticResource VideoGroupSource}}"
                                            ItemTemplateSelector="{StaticResource VideoGroupTemplateSelector}"
                                            ItemContainerStyleSelector="{StaticResource VideoItemContainerSelector}">
                        <ListView.GroupStyle>
                            <GroupStyle HeaderTemplate="{StaticResource JumpListHeaderTemplate}"
                                        HeaderContainerStyle="{StaticResource JumpListListHeaderContainerStyle}"/>
                        </ListView.GroupStyle>
                        <ListView.FooterTemplate>
                            <DataTemplate>
                                <controls:StateBlock State="{Binding VideoGroup.ContentState}"
                                                     ReloadCommand="{Binding VideoGroup.LoadCommand}"
                                                     x:Uid="UserContentView_VideosLoader"
                                                     Margin="0,0,0,60"
                                                     LoadingText="Загружаем список видеозаписей..."
                                                     ErrorText="Не удалось загрузить список видеозаписей"
                                                     NoDataText="Видеозаписи отсутствуют либо доступ к ним закрыт" />
                            </DataTemplate>
                        </ListView.FooterTemplate>
                        <i:Interaction.Behaviors>
                            <c:EventTriggerBehavior EventName="ItemClick">
                                <c:InvokeCommandAction Command="{Binding ExecuteTracksListItemCommand}"
                                                       InputConverter="{StaticResource ItemClickEventArgsConverter}"/>
                            </c:EventTriggerBehavior>
                            <b:IncrementalUpDownLoadingBehavior ScrollHeightTriggerOffset="1400"
                                                                ItemsSource="{Binding VideoGroup}" />
                        </i:Interaction.Behaviors>
                    </controls:FixedListView>
                </SemanticZoom.ZoomedInView>
                <SemanticZoom.ZoomedOutView>
                    <ListView ItemsSource="{Binding CollectionGroups, Source={StaticResource VideoGroupSource}}"
                              Style="{StaticResource GenericJumpListPickerStyle}"
                              ItemTemplate="{StaticResource JumpListPickerItemTemplate}" />
                </SemanticZoom.ZoomedOutView>
            </SemanticZoom>
        </PivotItem>
        <PivotItem Header="документы"
                   x:Uid="UserContentView_PivotSection_Docs"
                   Margin="19,20,0,0">
            <ListView Style="{StaticResource NoSelectionListViewStyle}"
                      ItemsSource="{Binding Documents}"
                      ItemTemplate="{StaticResource DocumentTemplate}"
                      ItemContainerStyle="{StaticResource DocumentItemStyle}"
                      IsItemClickEnabled="{Binding IsItemClickEnabled}"
                      SelectionMode="{Binding IsSelectionMode, Converter={StaticResource BoolToSelectionModeConverter}}">
                <ListView.FooterTemplate>
                    <DataTemplate>
                        <controls:StateBlock State="{Binding Documents.ContentState}"
                                             ReloadCommand="{Binding Documents.LoadCommand}"
                                             x:Uid="UserContentView_DocsLoader"
                                             Margin="0,0,0,60"
                                             LoadingText="Загружаем список документов..."
                                             ErrorText="Не удалось загрузить список докментов"
                                             NoDataText="Документы отсутствуют либо доступ к ним закрыт" />
                    </DataTemplate>
                </ListView.FooterTemplate>
                <i:Interaction.Behaviors>
                    <c:EventTriggerBehavior EventName="ItemClick">
                        <c:InvokeCommandAction Command="{Binding NotImplementedCommand}" />
                    </c:EventTriggerBehavior>
                    <b:SelectedItemsBindingBehavior SelectedItems="{Binding SelectedItems}"
                                                    SelectAll="{Binding SelectAllDocuments}"
                                                    Command="{Binding SelectionChangedCommand}" />
                </i:Interaction.Behaviors>
            </ListView>
        </PivotItem>
    </Pivot>
</mvvm:VisualStateAwarePage>
