<mvvm:SessionStateAwarePage x:Class="VKSaver.Views.TransferView"
                            xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                            xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                            xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                            xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                            xmlns:controls="using:VKSaver.Controls"
                            xmlns:mvvm="using:Prism.Windows.Mvvm"
                            xmlns:viewModels="using:VKSaver.Core.ViewModels"
                            xmlns:common="using:VKSaver.Common"
                            xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
                            xmlns:behaviors="using:VKSaver.Behaviors"
                            xmlns:core="using:Microsoft.Xaml.Interactions.Core"
                            xmlns:converters="using:VKSaver.Converters"
                            mc:Ignorable="d"
                            mvvm:ViewModelLocator.AutoWireViewModel="True"
                            controls:Shell.IsPlayerBlockVisible="False"
                            controls:Shell.ChromeStyle="Hided"
                            d:DataContext="{d:DesignInstance viewModels:TransferViewModel}">

    <mvvm:SessionStateAwarePage.Resources>
        <common:DataContextProxy x:Key="DataContextProxy" />
        <converters:FileSizeConverter x:Key="FileSizeConverter" />
        <converters:TransferStatusConverter x:Key="TransferStatusConverter" />

        <DataTemplate x:Key="TransferItemTemplate">
            <Grid Background="Transparent">
                <Grid.ChildrenTransitions>
                    <TransitionCollection>
                        <EntranceThemeTransition />
                        <ContentThemeTransition />
                    </TransitionCollection>
                </Grid.ChildrenTransitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>

                <controls:TransferProgressIndicator ContentType="{Binding ContentType}"
                                                    Percentage="{Binding Percentage}"
                                                    IsPaused="{Binding IsIndicatorPaused}"
                                                    Margin="0,0,10,0"
                                                    Pivot.SlideInAnimationGroup="GroupOne"
                                                    Width="82"
                                                    Height="82" />
                <StackPanel Grid.Column="1">
                    <TextBlock Text="{Binding Name}"
                               FontSize="28"
                               FontWeight="SemiLight"
                               Pivot.SlideInAnimationGroup="GroupOne"
                               Margin="0,1,0,2" />
                    <ProgressBar Value="{Binding Percentage}"
                                 Maximum="100"
                                 ShowPaused="{Binding IsIndicatorPaused}"
                                 Foreground="{StaticResource AccentHighBrush}"
                                 Pivot.SlideInAnimationGroup="GroupTwo"
                                 BorderBrush="{x:Null}">
                        <ProgressBar.Background>
                            <SolidColorBrush Color="{StaticResource AccentHighColor}"
                                             Opacity="0.15" />
                        </ProgressBar.Background>
                    </ProgressBar>
                    <TextBlock Text="{Binding Status, Converter={StaticResource TransferStatusConverter}}"
                               FontSize="18"
                               Margin="0,5,0,0"
                               Pivot.SlideInAnimationGroup="GroupTwo" />
                    <TextBlock FontSize="18"
                               Pivot.SlideInAnimationGroup="GroupThree"
                               Foreground="{ThemeResource SystemControlForegroundBaseMediumBrush}"
                               Text="{Binding SizeProgressText}" />
                </StackPanel>
            </Grid>
        </DataTemplate>

        <Style x:Key="DownloadItemContainerStyle"
               TargetType="ListViewItem"
               BasedOn="{StaticResource NarrowListViewItemStyle}">
            <Setter Property="FlyoutBase.AttachedFlyout">
                <Setter.Value>
                    <MenuFlyout>
                        <MenuFlyoutItem Text="пауза"
                                        x:Uid="TransferView_PauseFlyoutItem"
                                        Command="{Binding DataSource.PauseDownloadCommand, Source={StaticResource DataContextProxy}}"
                                        CommandParameter="{Binding}"
                                        IsEnabled="{Binding CanPause}" />
                        <MenuFlyoutItem Text="возобновить"
                                        x:Uid="TransferView_ResumeFlyoutItem"
                                        Command="{Binding DataSource.ResumeDownloadCommand, Source={StaticResource DataContextProxy}}"
                                        CommandParameter="{Binding}"
                                        IsEnabled="{Binding CanResume}" />
                        <MenuFlyoutItem Text="отменить"
                                        x:Uid="TransferView_CancelFlyoutItem"
                                        Command="{Binding DataSource.CancelDownloadCommand, Source={StaticResource DataContextProxy}}"
                                        CommandParameter="{Binding}" />
                    </MenuFlyout>
                </Setter.Value>
            </Setter>
            <Setter Property="common:ControlExtensions.ShowFlyoutOnHolding"
                    Value="True" />
        </Style>

        <Style x:Key="UploadItemContainerStyle"
               TargetType="ListViewItem"
               BasedOn="{StaticResource NarrowListViewItemStyle}">
            <Setter Property="FlyoutBase.AttachedFlyout">
                <Setter.Value>
                    <MenuFlyout>
                        <MenuFlyoutItem Text="отменить"
                                        x:Uid="TransferView_CancelFlyoutItem"
                                        Command="{Binding DataSource.CancelUploadCommand, Source={StaticResource DataContextProxy}}"
                                        CommandParameter="{Binding}" />
                    </MenuFlyout>
                </Setter.Value>
            </Setter>
            <Setter Property="common:ControlExtensions.ShowFlyoutOnHolding"
                    Value="True" />
        </Style>

        <Storyboard x:Name="FadeInAnimation">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                           Storyboard.TargetName="ColorSubstrateRect">
                <EasingDoubleKeyFrame KeyTime="0"
                                      Value="0" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.5"
                                      Value="0.15" />
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
    </mvvm:SessionStateAwarePage.Resources>

    <RelativePanel>
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="WindowStates">
                <VisualState x:Name="State2">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="750" />
                    </VisualState.StateTriggers>
                </VisualState>
                <VisualState x:Name="State1">
                    <VisualState.Setters>
                        <Setter Target="RootGrid.(RelativePanel.AlignLeftWithPanel)"
                                Value="True" />
                        <Setter Target="RootGrid.(RelativePanel.AlignRightWithPanel)"
                                Value="True" />
                        <Setter Target="RootGrid.(FrameworkElement.Width)"
                                Value="NaN" />
                        <Setter Target="RootGrid.(FrameworkElement.Margin)">
                            <Setter.Value>
                                <Thickness>0</Thickness>
                            </Setter.Value>
                        </Setter>
                        <Setter Target="TitlePanel.(FrameworkElement.Margin)">
                            <Setter.Value>
                                <Thickness>12,50,0,0</Thickness>
                            </Setter.Value>
                        </Setter>
                    </VisualState.Setters>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="570" />
                    </VisualState.StateTriggers>
                </VisualState>
                <VisualState x:Name="State0">
                    <VisualState.Setters>
                        <Setter Target="RootGrid.(RelativePanel.AlignLeftWithPanel)"
                                Value="True" />
                        <Setter Target="RootGrid.(RelativePanel.AlignRightWithPanel)"
                                Value="True" />
                        <Setter Target="RootGrid.(FrameworkElement.Width)"
                                Value="NaN" />
                        <Setter Target="RootGrid.(FrameworkElement.Margin)">
                            <Setter.Value>
                                <Thickness>0</Thickness>
                            </Setter.Value>
                        </Setter>
                        <Setter Target="TitlePanel.(FrameworkElement.Margin)">
                            <Setter.Value>
                                <Thickness>12,50,0,0</Thickness>
                            </Setter.Value>
                        </Setter>
                    </VisualState.Setters>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <Rectangle x:Name="ColorSubstrateRect"
                   RelativePanel.AlignTopWithPanel="True"
                   RelativePanel.AlignBottomWithPanel="True"
                   RelativePanel.AlignLeftWithPanel="True"
                   RelativePanel.AlignRightWithPanel="True"
                   Fill="{ThemeResource AppGradientBrush}"
                   Opacity="0.15" />

        <Grid x:Name="RootGrid"
              Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
              Width="650"
              RelativePanel.AlignTopWithPanel="True"
              RelativePanel.AlignBottomWithPanel="True"
              Margin="48,0,0,0"
              RenderTransformOrigin="0.5,0.5">
            <Grid.RenderTransform>
                <CompositeTransform />
            </Grid.RenderTransform>
            <Grid.Transitions>
                <TransitionCollection>
                    <EntranceThemeTransition FromVerticalOffset="0"
                                             FromHorizontalOffset="140" />
                </TransitionCollection>
            </Grid.Transitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition />
            </Grid.RowDefinitions>

            <Rectangle Fill="{ThemeResource AppGradientBrush}"
                       Width="220"
                       HorizontalAlignment="Left"
                       Height="6"
                       x:Name="TitlePanel"
                       Margin="24,50,0,0" />

            <Pivot SelectedIndex="{Binding SelectedPivotIndex, Mode=TwoWay}"
                   Margin="12,0,12,0"
                   Grid.Row="1">
                <Pivot.HeaderTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Converter={StaticResource ToUpperConverter}}"
                                   Style="{StaticResource SubheaderTextBlockStyle}"/>
                    </DataTemplate>
                </Pivot.HeaderTemplate>
                    
                <PivotItem Header="загрузки"
                           x:Uid="TransferView_PivotSection_Downloads"
                           Margin="0,24,0,0">
                    <controls:ContentContainer State="{Binding DownloadsState}"
                                               x:Uid="TransferView_DownloadsLoader"
                                               LoadingText="Получение списока текущих загрузок..."
                                               ErrorText="Не удалось получить список текущих загрузок"
                                               NoDataText="Сейчас не выполняется никаких загрузок">
                        <ListView Style="{StaticResource NoSelectionListViewStyle}"
                                  ItemsSource="{Binding Downloads}"
                                  ItemTemplate="{StaticResource TransferItemTemplate}"
                                  ItemContainerStyle="{StaticResource DownloadItemContainerStyle}"
                                  HorizontalContentAlignment="Stretch"
                                  x:Name="DownloadsListView">
                            <ListView.ItemContainerTransitions>
                                <TransitionCollection>
                                    <EntranceThemeTransition />
                                    <ContentThemeTransition />
                                    <AddDeleteThemeTransition />
                                    <ReorderThemeTransition />
                                </TransitionCollection>
                            </ListView.ItemContainerTransitions>

                            <interactivity:Interaction.Behaviors>
                                <core:EventTriggerBehavior EventName="ItemClick">
                                    <core:InvokeCommandAction Command="{Binding ShowInfoCommand}"
                                                           InputConverter="{StaticResource ItemClickEventArgsConverter}" />
                                </core:EventTriggerBehavior>
                            </interactivity:Interaction.Behaviors>
                        </ListView>
                    </controls:ContentContainer>
                </PivotItem>
                <PivotItem Header="отправки"
                           x:Uid="TransferView_PivotSection_Uploads"
                           Margin="0,24,0,0">
                    <controls:ContentContainer State="{Binding UploadsState}"
                                               x:Uid="TransferView_UploadsLoader">
                        <ListView Style="{StaticResource NoSelectionListViewStyle}"
                                  ItemsSource="{Binding Uploads}"
                                  ItemTemplate="{StaticResource TransferItemTemplate}"
                                  ItemContainerStyle="{StaticResource UploadItemContainerStyle}"
                                  HorizontalContentAlignment="Stretch"
                                  x:Name="UploadsListView">
                            <ListView.ItemContainerTransitions>
                                <TransitionCollection>
                                    <EntranceThemeTransition />
                                    <ContentThemeTransition />
                                    <AddDeleteThemeTransition />
                                    <ReorderThemeTransition />
                                </TransitionCollection>
                            </ListView.ItemContainerTransitions>

                            <interactivity:Interaction.Behaviors>
                                <core:EventTriggerBehavior EventName="ItemClick">
                                    <core:InvokeCommandAction Command="{Binding ShowInfoCommand}"
                                                           InputConverter="{StaticResource ItemClickEventArgsConverter}" />
                                </core:EventTriggerBehavior>
                            </interactivity:Interaction.Behaviors>
                        </ListView>
                    </controls:ContentContainer>
                </PivotItem>
                <!--<PivotItem Header="журнал"
                   x:Uid="TransferView_PivotSection_History"
                   Style="{StaticResource PivotItemStyle}">
            <controls:ContentContainer State="{Binding HistoryState}"
                                       x:Uid="TransferView_HistoryLoader"
                                       NoDataText="Журнал загрузок пока не поддерживается">
            </controls:ContentContainer>
        </PivotItem>-->
            </Pivot>

            <CommandBar Visibility="Collapsed"
                        Style="{StaticResource BluredCommandBar}"
                        Grid.Row="1"
                        VerticalAlignment="Bottom">
                <CommandBar.Background>
                    <SolidColorBrush Opacity="0.5"
                                     Color="{ThemeResource SystemChromeMediumColor}" />
                </CommandBar.Background>
                <CommandBar.SecondaryCommands>
                    <AppBarButton Label="отменить все загрузки"
                                  x:Uid="TransferView_CancelAllDownloadsButton"
                                  Command="{Binding CancelAllDownloadsCommand}" />
                    <AppBarButton Label="отменить все отправки"
                                  x:Uid="TransferView_CancelAllUploadsButton"
                                  Command="{Binding CancelAllUploadsCommand}" />
                </CommandBar.SecondaryCommands>
            </CommandBar>
        </Grid>
    </RelativePanel>
</mvvm:SessionStateAwarePage>

