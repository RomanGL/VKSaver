<mvvm:SessionStateAwarePage x:Class="VKSaver.Views.UserContentView"
                            xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                            xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                            xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                            xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                            xmlns:mvvm="using:Prism.Windows.Mvvm"
                            xmlns:converters="using:VKSaver.Converters"
                            xmlns:common="using:VKSaver.Common"
                            xmlns:controls="using:VKSaver.Controls"
                            xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
                            xmlns:behaviors="using:VKSaver.Behaviors"
                            xmlns:core="using:Microsoft.Xaml.Interactions.Core"
                            xmlns:toolkit="using:Microsoft.Toolkit.Uwp.UI.Controls"
                            xmlns:inTouch="using:ModernDev.InTouch"
                            mvvm:ViewModelLocator.AutoWireViewModel="True"
                            mc:Ignorable="d">

    <mvvm:SessionStateAwarePage.Resources>
        <converters:FileSizeConverter x:Key="FileSizeConverter" />
        <converters:UserContentGroupKeyToStringConverter x:Key="GroupKeyToStringConverter" />
        <common:DataContextProxy x:Key="DataContextProxy" />

        <DataTemplate x:Key="JumpListHeaderTemplate">
            <Border>
                <TextBlock Text="{Binding Key, Converter={StaticResource GroupKeyToStringConverter}}"
                           Foreground="{ThemeResource AccentHighBrush}"
                           FontSize="24"
                           FontWeight="SemiLight"
                           OpticalMarginAlignment="TrimSideBearings"
                           IsTextScaleFactorEnabled="False"
                           VerticalAlignment="Bottom"
                           Margin="0,0,0,20" />
            </Border>
        </DataTemplate>

        <DataTemplate x:Key="JumpListPickerItemTemplate">
            <TextBlock Text="{Binding Group.Key, Converter={StaticResource GroupKeyToStringConverter}}"
                       Foreground="{Binding Converter={StaticResource JumpListItemForegroundConverter}}"
                       Style="{StaticResource TitleTextBlockStyle}"/>
        </DataTemplate>

        <DataTemplate x:Key="DocumentTemplate"
                      x:DataType="inTouch:Doc">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="1*" />
                    <ColumnDefinition Width="0.5*" />
                    <ColumnDefinition Width="0.2*" />
                </Grid.ColumnDefinitions>

                <controls:ImagePlaceholder Text="{x:Bind Title, Mode=OneWay}"
                                           Source="{Binding Preview.Photo.Sizes[0].Src, Mode=OneWay}"
                                           Height="30"
                                           Width="30"
                                           Margin="0,3"
                                           VerticalAlignment="Center" />
                <TextBlock Text="{x:Bind Title}"
                           VerticalAlignment="Center"
                           Grid.Column="1"
                           Margin="8,0,0,0" />
                <TextBlock Text="{x:Bind Size, Converter={StaticResource FileSizeConverter}}"
                           Opacity="0.7"
                           VerticalAlignment="Center"
                           Margin="8,0,0,0"
                           Grid.Column="2" />
                <TextBlock Text="{x:Bind Ext}"
                           Opacity="0.7"
                           VerticalAlignment="Center"
                           HorizontalAlignment="Right"
                           Grid.Column="3"
                           Margin="8,0,12,0" />
            </Grid>
        </DataTemplate>

        <CollectionViewSource x:Key="AudioGroupSource"
                              Source="{Binding AudioGroup}"
                              IsSourceGrouped="True"
                              d:Source="{Binding AudioGroup}" />
        <CollectionViewSource x:Key="VideoGroupSource"
                              Source="{Binding VideoGroup}"
                              IsSourceGrouped="True"
                              d:Source="{Binding VideoGroup}" />

        <Style x:Key="AudioItemTemplate"
               TargetType="ListViewItem"
               BasedOn="{StaticResource NarrowListViewItemStyle}">
            <Setter Property="FlyoutBase.AttachedFlyout">
                <Setter.Value>
                    <MenuFlyout>
                        <MenuFlyoutItem Text="загрузить"
                                        x:Uid="DownloadFlyoutItem"
                                        Command="{Binding DataSource.DownloadItemCommand, Source={StaticResource DataContextProxy}}"
                                        CommandParameter="{Binding}" />
                        <MenuFlyoutItem Text="в мои аудиозаписи"
                                        x:Uid="AddToMyAudiosFlyoutItem"
                                        Command="{Binding DataSource.AddToMyCollectionCommand, Source={StaticResource DataContextProxy}}"
                                        CommandParameter="{Binding}" />
                        <MenuFlyoutItem Text="информация о треке"
                                        x:Uid="ShowTrackInfoFlyoutItem"
                                        Command="{Binding DataSource.ShowTrackInfoCommand, Source={StaticResource DataContextProxy}}"
                                        CommandParameter="{Binding}" />
                        <MenuFlyoutItem Text="удалить"
                                        x:Uid="DeleteFlyoutItem"
                                        Command="{Binding DataSource.DeleteCommand, Source={StaticResource DataContextProxy}}"
                                        CommandParameter="{Binding}" />
                    </MenuFlyout>
                </Setter.Value>
            </Setter>
            <Setter Property="common:ControlExtensions.ShowFlyoutOnHolding"
                    Value="True" />
            
        </Style>

        <Style x:Key="VideoItemStyle"
               TargetType="GridViewItem">
            <Setter Property="FlyoutBase.AttachedFlyout">
                <Setter.Value>
                    <MenuFlyout>
                        <MenuFlyoutItem Text="в мои видеозаписи"
                                        x:Uid="AddToMyVideosFlyoutItem"
                                        Command="{Binding DataSource.AddToMyCollectionCommand, Source={StaticResource DataContextProxy}}"
                                        CommandParameter="{Binding}" />
                        <MenuFlyoutItem Text="удалить"
                                        x:Uid="DeleteFlyoutItem"
                                        Command="{Binding DataSource.DeleteCommand, Source={StaticResource DataContextProxy}}"
                                        CommandParameter="{Binding}" />
                    </MenuFlyout>
                </Setter.Value>
            </Setter>
            <Setter Property="Padding"
                    Value="0" />
            <Setter Property="VerticalContentAlignment"
                    Value="Stretch" />
            <Setter Property="HorizontalContentAlignment"
                    Value="Stretch" />
            <Setter Property="common:ControlExtensions.ShowFlyoutOnHolding"
                    Value="True" />
        </Style>

        <Style x:Key="DocumentItemStyle"
               TargetType="ListViewItem"
               BasedOn="{StaticResource NarrowListViewItemStyle}">
            <Setter Property="FlyoutBase.AttachedFlyout">
                <Setter.Value>
                    <MenuFlyout>
                        <MenuFlyoutItem Text="загрузить"
                                        x:Uid="DownloadFlyoutItem"
                                        Command="{Binding DataSource.DownloadItemCommand, Source={StaticResource DataContextProxy}}"
                                        CommandParameter="{Binding}" />
                        <MenuFlyoutItem Text="в мои документы"
                                        x:Uid="AddToMyDocsFlyoutItem"
                                        Command="{Binding DataSource.AddToMyCollectionCommand, Source={StaticResource DataContextProxy}}"
                                        CommandParameter="{Binding}" />
                        <MenuFlyoutItem Text="удалить"
                                        x:Uid="DeleteFlyoutItem"
                                        Command="{Binding DataSource.DeleteCommand, Source={StaticResource DataContextProxy}}"
                                        CommandParameter="{Binding}" />
                    </MenuFlyout>
                </Setter.Value>
            </Setter>
            <Setter Property="common:ControlExtensions.ShowFlyoutOnHolding"
                    Value="True" />
        </Style>

        <Style x:Key="AlbumItemStyle"
               TargetType="ListViewItem"
               BasedOn="{StaticResource NoSelectionListViewItemStyle}">
            <Setter Property="FlyoutBase.AttachedFlyout">
                <Setter.Value>
                    <MenuFlyout>
                        <MenuFlyoutItem Text="удалить"
                                        x:Uid="DeleteFlyoutItem"
                                        Command="{Binding DataSource.DeleteCommand, Source={StaticResource DataContextProxy}}"
                                        CommandParameter="{Binding}" />
                    </MenuFlyout>
                </Setter.Value>
            </Setter>
            <Setter Property="MinHeight"
                    Value="32" />
            <Setter Property="common:ControlExtensions.ShowFlyoutOnHolding"
                    Value="True" />
        </Style>

        <Style x:Key="AlbumGridItemStyle"
               TargetType="GridViewItem">
            <Setter Property="FlyoutBase.AttachedFlyout">
                <Setter.Value>
                    <MenuFlyout>
                        <MenuFlyoutItem Text="удалить"
                                        x:Uid="DeleteFlyoutItem"
                                        Command="{Binding DataSource.DeleteCommand, Source={StaticResource DataContextProxy}}"
                                        CommandParameter="{Binding}" />
                    </MenuFlyout>
                </Setter.Value>
            </Setter>
            <Setter Property="common:ControlExtensions.ShowFlyoutOnHolding"
                    Value="True" />
            <Setter Property="VerticalContentAlignment"
                    Value="Stretch" />
            <Setter Property="HorizontalContentAlignment"
                    Value="Stretch" />
        </Style>

        <common:AudioGroupTemplateSelector x:Key="AudioGroupTemplateSelector"
                                           AudioTemplate="{StaticResource VKAudioWideTemplate}"
                                           AlbumTemplate="{StaticResource VKAudioAlbumTitleTemplate}" />
        <common:VideoGroupTemplateSelector x:Key="VideoGroupTemplateSelector"
                                           AlbumTemplate="{StaticResource VKVideoAlbumTemplate}"
                                           VideoTemplate="{StaticResource VKVideoTemplate}" />

        <common:ContentViewItemContainerStyleSelector x:Key="AudioItemContainerSelector"
                                                      DefaultStyle="{StaticResource AudioItemTemplate}"
                                                      AlbumStyle="{StaticResource AlbumItemStyle}" />
        <common:ContentViewItemContainerStyleSelector x:Key="VideoItemContainerSelector"
                                                      DefaultStyle="{StaticResource VideoItemStyle}"
                                                      AlbumStyle="{StaticResource AlbumGridItemStyle}" />
    </mvvm:SessionStateAwarePage.Resources>
    
    <mvvm:SessionStateAwarePage.Transitions>
        <TransitionCollection>
            <EntranceThemeTransition FromHorizontalOffset="0"
                                     FromVerticalOffset="140" />
        </TransitionCollection>
    </mvvm:SessionStateAwarePage.Transitions>

    <Grid>
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="WindowStates">
                <VisualState x:Name="Size600">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="600" />
                    </VisualState.StateTriggers>
                </VisualState>
                <VisualState x:Name="Size0">
                    <VisualState.Setters>
                    </VisualState.Setters>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <Pivot Title="{Binding PageTitle}"
               SelectedIndex="{Binding LastPivotIndex, Mode=TwoWay}"
               IsLocked="{Binding IsLockedPivot}"
               Margin="6,-7,0,0">
            <Pivot.HeaderTemplate>
                <DataTemplate>
                    <TextBlock Text="{Binding}"
                               Style="{StaticResource BodyTextBlockStyle}"
                               FontWeight="Bold"
                               Margin="0,-13,0,0" />
                </DataTemplate>
            </Pivot.HeaderTemplate>

            <!-- Композиции -->

            <PivotItem Header="Музыка"
                       Margin="0,-10,0,0">
                <SemanticZoom>
                    <SemanticZoom.ZoomedInView>
                        <controls:FixedListView Style="{StaticResource NoSelectionListViewStyle}"
                                                ItemsSource="{Binding Source={StaticResource AudioGroupSource}}"
                                                ItemTemplateSelector="{StaticResource AudioGroupTemplateSelector}"
                                                ItemContainerStyleSelector="{StaticResource AudioItemContainerSelector}"
                                                IsItemClickEnabled="{Binding IsItemClickEnabled}"
                                                SelectionMode="{Binding IsSelectionMode, Converter={StaticResource BoolToSelectionModeConverter}}"
                                                VerticalAlignment="Top">
                            <ListView.GroupStyle>
                                <GroupStyle HidesIfEmpty="True"
                                            HeaderTemplate="{StaticResource JumpListHeaderTemplate}" />
                            </ListView.GroupStyle>
                            <ListView.FooterTemplate>
                                <DataTemplate>
                                    <controls:StateBlock State="{Binding AudioGroup.ContentState}"
                                                         ReloadCommand="{Binding AudioGroup.LoadCommand}"
                                                         x:Uid="UserContentView_AudiosLoader"
                                                         Margin="12,0,0,128"
                                                         LoadingText="Загружаем список аудиозаписей..."
                                                         ErrorText="Не удалось загрузить список аудиозаписей"
                                                         NoDataText="Аудиозаписи отсутствуют либо доступ к ним закрыт" />
                                </DataTemplate>
                            </ListView.FooterTemplate>
                            <interactivity:Interaction.Behaviors>
                                <core:EventTriggerBehavior EventName="ItemClick">
                                    <core:InvokeCommandAction Command="{Binding ExecuteTracksListItemCommand}"
                                                              InputConverter="{StaticResource ItemClickEventArgsConverter}" />
                                </core:EventTriggerBehavior>
                                <behaviors:IncrementalUpDownLoadingBehavior ScrollHeightTriggerOffset="1400"
                                                                            ItemsSource="{Binding AudioGroup}" />
                                <behaviors:SelectedItemsBindingBehavior SelectedItems="{Binding SelectedItems}"
                                                                        SelectAll="{Binding SelectAllAudios}"
                                                                        Command="{Binding SelectionChangedCommand}" />
                            </interactivity:Interaction.Behaviors>
                        </controls:FixedListView>
                    </SemanticZoom.ZoomedInView>
                    <SemanticZoom.ZoomedOutView>
                        <ListView ItemsSource="{Binding CollectionGroups, Source={StaticResource AudioGroupSource}}"
                                  ItemTemplate="{StaticResource JumpListPickerItemTemplate}"
                                  FooterTemplate="{StaticResource DefaultFooterTemplate}" 
                                  VerticalAlignment="Center"
                                  HorizontalAlignment="Center"/>
                    </SemanticZoom.ZoomedOutView>
                </SemanticZoom>
            </PivotItem>

            <PivotItem Header="Видео"
                       Margin="0,-10,0,0">
                <SemanticZoom>
                    <SemanticZoom.ZoomedInView>
                        <controls:FixedAdaptiveGridView ItemsSource="{Binding Source={StaticResource VideoGroupSource}}"
                                                        ItemTemplateSelector="{StaticResource VideoGroupTemplateSelector}"
                                                        ItemContainerStyleSelector="{StaticResource VideoItemContainerSelector}"
                                                        SelectionMode="{Binding IsSelectionMode, Converter={StaticResource BoolToSelectionModeConverter}}"
                                                        VerticalAlignment="Top"
                                                        IsItemClickEnabled="True"
                                                        ItemHeight="270"
                                                        DesiredWidth="270">
                            <GridView.GroupStyle>
                                <GroupStyle HidesIfEmpty="True"
                                            HeaderTemplate="{StaticResource JumpListHeaderTemplate}" />
                            </GridView.GroupStyle>
                            <GridView.FooterTemplate>
                                <DataTemplate>
                                    <controls:StateBlock State="{Binding VideoGroup.ContentState}"
                                                         ReloadCommand="{Binding VideoGroup.LoadCommand}"
                                                         x:Uid="UserContentView_VideosLoader"
                                                         Margin="12,0,0,128"
                                                         LoadingText="Загружаем список видеозаписей..."
                                                         ErrorText="Не удалось загрузить список видеозаписей"
                                                         NoDataText="Видеозаписи отсутствуют либо доступ к ним закрыт" />
                                </DataTemplate>
                            </GridView.FooterTemplate>
                            <GridView.ItemContainerTransitions>
                                <TransitionCollection>
                                    <RepositionThemeTransition />
                                </TransitionCollection>
                            </GridView.ItemContainerTransitions>

                            <interactivity:Interaction.Behaviors>
                                <core:EventTriggerBehavior EventName="ItemClick">
                                    <core:InvokeCommandAction Command="{Binding ExecuteTracksListItemCommand}"
                                                              InputConverter="{StaticResource ItemClickEventArgsConverter}" />
                                </core:EventTriggerBehavior>
                                <behaviors:IncrementalUpDownLoadingBehavior ScrollHeightTriggerOffset="1400"
                                                                            ItemsSource="{Binding VideoGroup}" />
                            </interactivity:Interaction.Behaviors>
                        </controls:FixedAdaptiveGridView>
                    </SemanticZoom.ZoomedInView>
                    <SemanticZoom.ZoomedOutView>
                        <ListView ItemsSource="{Binding CollectionGroups, Source={StaticResource VideoGroupSource}}"
                                  ItemTemplate="{StaticResource JumpListPickerItemTemplate}"
                                  FooterTemplate="{StaticResource DefaultFooterTemplate}"
                                  VerticalAlignment="Center"
                                  HorizontalAlignment="Center" />
                    </SemanticZoom.ZoomedOutView>
                </SemanticZoom>
            </PivotItem>

            <PivotItem Header="Документы"
                       Margin="0,-10,0,0">
                <ListView Style="{StaticResource NoSelectionListViewStyle}"
                          ItemsSource="{Binding Documents}"
                          ItemTemplate="{StaticResource DocumentTemplate}"
                          ItemContainerStyle="{StaticResource DocumentItemStyle}"
                          IsItemClickEnabled="{Binding IsItemClickEnabled}"
                          SelectionMode="{Binding IsSelectionMode, Converter={StaticResource BoolToSelectionModeConverter}}">
                    <ListView.FooterTemplate>
                        <DataTemplate>
                            <controls:StateBlock State="{Binding Documents.ContentState}"
                                                 ReloadCommand="{Binding Documents.LoadCommand}"
                                                 x:Uid="UserContentView_DocsLoader"
                                                 Margin="12,0,0,128"
                                                 LoadingText="Загружаем список документов..."
                                                 ErrorText="Не удалось загрузить список докментов"
                                                 NoDataText="Документы отсутствуют либо доступ к ним закрыт" />
                        </DataTemplate>
                    </ListView.FooterTemplate>
                    <interactivity:Interaction.Behaviors>
                        <core:EventTriggerBehavior EventName="ItemClick">
                            <core:InvokeCommandAction Command="{Binding ExecuteTracksListItemCommand}"
                                                      InputConverter="{StaticResource ItemClickEventArgsConverter}" />
                        </core:EventTriggerBehavior>
                        <behaviors:SelectedItemsBindingBehavior SelectedItems="{Binding SelectedItems}"
                                                                SelectAll="{Binding SelectAllDocuments}"
                                                                Command="{Binding SelectionChangedCommand}" />
                    </interactivity:Interaction.Behaviors>
                </ListView>
            </PivotItem>
        </Pivot>

        <CommandBar VerticalAlignment="Bottom"
                    HorizontalAlignment="Stretch"
                    Margin="0,0,0,60"
                    Style="{StaticResource BluredCommandBar}">
            <CommandBar.Background>
                <SolidColorBrush Opacity="0.4"
                                 Color="{ThemeResource SystemChromeMediumColor}" />
            </CommandBar.Background>
            <interactivity:Interaction.Behaviors>
                <behaviors:CommandBarButtonsBindingBehavior PrimaryCommands="{Binding PrimaryItems}"
                                                            SecondaryCommands="{Binding SecondaryItems}" />
            </interactivity:Interaction.Behaviors>
        </CommandBar>
    </Grid>
</mvvm:SessionStateAwarePage>



